diff --git a/content/child/runtime_features.cc b/content/child/runtime_features.cc
index 2b4c9783e417b..7c3a6f277a6c5 100644
--- a/content/child/runtime_features.cc
+++ b/content/child/runtime_features.cc
@@ -386,6 +386,8 @@ void SetRuntimeFeaturesFromChromiumFeatures() {
           {"FledgeBiddingAndAuctionServerAPI",
            raw_ref(blink::features::kFledgeBiddingAndAuctionServer), kDefault},
           {"FontSrcLocalMatching", raw_ref(features::kFontSrcLocalMatching)},
+          {"LegacyWindowsDWriteFontFallback",
+           raw_ref(features::kLegacyWindowsDWriteFontFallback)},
           {"MachineLearningNeuralNetwork",
            raw_ref(webnn::mojom::features::kWebMachineLearningNeuralNetwork),
            kSetOnlyIfOverridden},
diff --git a/content/public/common/content_features.cc b/content/public/common/content_features.cc
index e0bc3bbda0b99..09605a06a009b 100644
--- a/content/public/common/content_features.cc
+++ b/content/public/common/content_features.cc
@@ -635,6 +635,13 @@ BASE_FEATURE(kLegacyTechReportEnableCookieIssueReports,
              "LazyInitializeMediaControls",
              base::FEATURE_ENABLED_BY_DEFAULT);
 
+// Configures whether Blink on Windows 8.0 and below should use out of process
+// API font fallback calls to retrieve a fallback font family name as opposed to
+// using a hard-coded font lookup table.
+BASE_FEATURE(kLegacyWindowsDWriteFontFallback,
+             "LegacyWindowsDWriteFontFallback",
+             base::FEATURE_DISABLED_BY_DEFAULT);
+
 BASE_FEATURE(kLogJsConsoleMessages,
              "LogJsConsoleMessages",
 #if BUILDFLAG(IS_ANDROID) && !BUILDFLAG(IS_DESKTOP_ANDROID)
diff --git a/content/public/common/content_features.h b/content/public/common/content_features.h
index fa85b5a0b1258..d7c4a15406710 100644
--- a/content/public/common/content_features.h
+++ b/content/public/common/content_features.h
@@ -151,6 +151,7 @@ CONTENT_EXPORT BASE_DECLARE_FEATURE(kIsolateOrigins);
 CONTENT_EXPORT BASE_DECLARE_FEATURE(kIsolateOrigins);
 CONTENT_EXPORT extern const char kIsolateOriginsFieldTrialParamName[];
 CONTENT_EXPORT BASE_DECLARE_FEATURE(kLazyInitializeMediaControls);
+CONTENT_EXPORT BASE_DECLARE_FEATURE(kLegacyWindowsDWriteFontFallback);
 CONTENT_EXPORT BASE_DECLARE_FEATURE(kLogJsConsoleMessages);
 CONTENT_EXPORT BASE_DECLARE_FEATURE(kLowerPAMemoryLimitForNonMainRenderers);
 CONTENT_EXPORT BASE_DECLARE_FEATURE(kMBIMode);
diff --git a/third_party/blink/renderer/platform/fonts/win/font_cache_skia_win.cc b/third_party/blink/renderer/platform/fonts/win/font_cache_skia_win.cc
index 09115c712783e..65fdd49f99cd3 100644
--- a/third_party/blink/renderer/platform/fonts/win/font_cache_skia_win.cc
+++ b/third_party/blink/renderer/platform/fonts/win/font_cache_skia_win.cc
@@ -314,7 +314,8 @@ const SimpleFontData* FontCache::PlatformFallbackFontForCharacter(
           font_description, character, fallback_priority_with_emoji_text);
 
   // Fall through to running the API-based fallback.
-  if (!hardcoded_list_fallback_font) {
+  if (RuntimeEnabledFeatures::LegacyWindowsDWriteFontFallbackEnabled() ||
+      !hardcoded_list_fallback_font) {
     return GetDWriteFallbackFamily(font_description, character,
                                    fallback_priority_with_emoji_text);
   }
diff --git a/third_party/blink/renderer/platform/runtime_enabled_features.json5 b/third_party/blink/renderer/platform/runtime_enabled_features.json5
index 4f8e8a9e9354c..7764c4a00758b 100644
--- a/third_party/blink/renderer/platform/runtime_enabled_features.json5
+++ b/third_party/blink/renderer/platform/runtime_enabled_features.json5
@@ -2555,6 +2555,11 @@
       name: "LazyLoadScrollMarginIframe",
       public: true,
       status: "stable",
+    },
+    {
+      name: "LegacyWindowsDWriteFontFallback",
+      // Enabled by features::kLegacyWindowsDWriteFontFallback;
+      base_feature: "none",
     },
      {
       name: "LimitThirdPartyCookies",
