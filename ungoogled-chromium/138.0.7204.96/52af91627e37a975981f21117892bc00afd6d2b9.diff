

diff --git a/base/threading/platform_thread_win.cc b/base/threading/platform_thread_win.cc
index b8a0d23a43f6c..497d471928dde 100644
--- a/base/threading/platform_thread_win.cc
+++ b/base/threading/platform_thread_win.cc
@@ -466,7 +466,16 @@ void SetCurrentThreadPriority(ThreadType thread_type,
 }
 
 void SetCurrentThreadQualityOfService(ThreadType thread_type) {
-  // QoS and power throttling were introduced in Win10 1709.
+  // QoS and power throttling were introduced in Win10 1709
+  if (win::GetVersion() < win::Version::WIN10_RS3) {
+    return;
+  }
+
+  static const auto set_thread_information_fn =
+      reinterpret_cast<decltype(&::SetThreadInformation)>(::GetProcAddress(
+          ::GetModuleHandle(L"kernel32.dll"), "SetThreadInformation"));
+  DCHECK(set_thread_information_fn);
+
   bool desire_ecoqos = false;
   switch (thread_type) {
     case ThreadType::kBackground:
@@ -489,11 +498,10 @@ void SetCurrentThreadQualityOfService(ThreadType thread_type) {
       .StateMask =
           desire_ecoqos ? THREAD_POWER_THROTTLING_EXECUTION_SPEED : 0ul,
   };
-  [[maybe_unused]] const BOOL success = ::SetThreadInformation(
+  [[maybe_unused]] const BOOL success = set_thread_information_fn(
       ::GetCurrentThread(), ::ThreadPowerThrottling,
       &thread_power_throttling_state, sizeof(thread_power_throttling_state));
-  // Failure is expected on versions of Windows prior to RS3.
-  DPLOG_IF(ERROR, !success && win::GetVersion() >= win::Version::WIN10_RS3)
+  DPLOG_IF(ERROR, !success)
       << "Failed to set EcoQoS to " << std::boolalpha << desire_ecoqos;
 }
 
