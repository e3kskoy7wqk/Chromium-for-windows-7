diff --git a/base/win/win_util.cc b/base/win/win_util.cc
index 0979881ae314f..a96a28c550114 100644
--- a/base/win/win_util.cc
+++ b/base/win/win_util.cc
@@ -367,7 +367,13 @@ ProcessPowerState GetProcessPowerThrottlingState(HANDLE process, ULONG flag) {
   PROCESS_POWER_THROTTLING_STATE power_throttling{
       .Version = PROCESS_POWER_THROTTLING_CURRENT_VERSION};
 
-  if (!::GetProcessInformation(process, ProcessPowerThrottling,
+  static const auto get_process_information_fn =
+      reinterpret_cast<decltype(&::GetProcessInformation)>(::GetProcAddress(
+          ::GetModuleHandle(L"Kernel32.dll"), "GetProcessInformation"));
+  if (!get_process_information_fn) {
+    return ProcessPowerState::kUnset;
+  }
+  if (!get_process_information_fn(process, ProcessPowerThrottling,
                                &power_throttling, sizeof(power_throttling))) {
     return ProcessPowerState::kUnset;
   }
@@ -385,6 +391,12 @@ ProcessPowerState GetProcessPowerThrottlingState(HANDLE process, ULONG flag) {
 bool SetProcessPowerThrottlingState(HANDLE process,
                                     ULONG flag,
                                     ProcessPowerState state) {
+  static const auto get_process_information_fn =
+      reinterpret_cast<decltype(&::GetProcessInformation)>(::GetProcAddress(
+          ::GetModuleHandle(L"Kernel32.dll"), "GetProcessInformation"));
+  static const auto set_process_information_fn =
+      reinterpret_cast<decltype(&::SetProcessInformation)>(::GetProcAddress(
+          ::GetModuleHandle(L"Kernel32.dll"), "SetProcessInformation"));
   // Process power throttling is a Windows 11 feature, but before 22H2
   // there was no way to query the current state using GetProcessInformation.
   // Getting the current state is needed in Process::GetPriority to determine
@@ -399,7 +411,7 @@ bool SetProcessPowerThrottlingState(HANDLE process,
 
   // Get the current state of the process power throttling so we do not clobber
   // other previously set flags.
-  if (!::GetProcessInformation(process, ProcessPowerThrottling,
+  if (!get_process_information_fn(process, ProcessPowerThrottling,
                                &power_throttling, sizeof(power_throttling))) {
     return false;
   }
@@ -425,7 +437,7 @@ bool SetProcessPowerThrottlingState(HANDLE process,
       break;
   }
 
-  return ::SetProcessInformation(process, ProcessPowerThrottling,
+  return set_process_information_fn(process, ProcessPowerThrottling,
                                  &power_throttling, sizeof(power_throttling));
 }
 
