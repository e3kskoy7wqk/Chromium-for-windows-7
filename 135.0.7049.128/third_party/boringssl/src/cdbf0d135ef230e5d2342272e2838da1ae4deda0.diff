

diff --git a/crypto/rand/windows.cc b/crypto/rand/windows.cc
index 6b407b7c0..1f5da79e5 100644
--- a/crypto/rand/windows.cc
+++ b/crypto/rand/windows.cc
@@ -29,6 +29,13 @@ OPENSSL_MSVC_PRAGMA(warning(push, 3))
     !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
 #include <bcrypt.h>
 OPENSSL_MSVC_PRAGMA(comment(lib, "bcrypt.lib"))
+#else
+// #define needed to link in RtlGenRandom(), a.k.a. SystemFunction036.  See the
+// "Community Additions" comment on MSDN here:
+// http://msdn.microsoft.com/en-us/library/windows/desktop/aa387694.aspx
+#define SystemFunction036 NTAPI SystemFunction036
+#include <ntsecapi.h>
+#undef SystemFunction036
 #endif  // WINAPI_PARTITION_APP && !WINAPI_PARTITION_DESKTOP
 
 OPENSSL_MSVC_PRAGMA(warning(pop))
@@ -56,34 +63,21 @@ void CRYPTO_sysrand(uint8_t *out, size_t requested) {
 
 #else
 
-// See: https://learn.microsoft.com/en-us/windows/win32/seccng/processprng
-typedef BOOL (WINAPI *ProcessPrngFunction)(PBYTE pbData, SIZE_T cbData);
-static ProcessPrngFunction g_processprng_fn = NULL;
-
-static void init_processprng(void) {
-  HMODULE hmod = LoadLibraryW(L"bcryptprimitives");
-  if (hmod == NULL) {
-    abort();
-  }
-  g_processprng_fn = (ProcessPrngFunction)GetProcAddress(hmod, "ProcessPrng");
-  if (g_processprng_fn == NULL) {
-    abort();
-  }
-}
-
-void CRYPTO_init_sysrand(void) {
-  static CRYPTO_once_t once = CRYPTO_ONCE_INIT;
-  CRYPTO_once(&once, init_processprng);
-}
+void CRYPTO_init_sysrand(void) {}
 
 void CRYPTO_sysrand(uint8_t *out, size_t requested) {
-  CRYPTO_init_sysrand();
-  // On non-UWP configurations, use ProcessPrng instead of BCryptGenRandom
-  // to avoid accessing resources that may be unavailable inside the
-  // Chromium sandbox. See https://crbug.com/74242
-  if (!g_processprng_fn(out, requested)) {
-    abort();
+  while (requested > 0) {
+    ULONG output_bytes_this_pass = ULONG_MAX;
+    if (requested < output_bytes_this_pass) {
+      output_bytes_this_pass = (ULONG)requested;
+    }
+    if (RtlGenRandom(out, output_bytes_this_pass) == FALSE) {
+      abort();
+    }
+    requested -= output_bytes_this_pass;
+    out += output_bytes_this_pass;
   }
+  return;
 }
 
 #endif  // WINAPI_PARTITION_APP && !WINAPI_PARTITION_DESKTOP
